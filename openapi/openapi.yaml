openapi: 3.0.1
info:
  title: CGN Onboarding Portal
  description: Carta Giovani Nazionale Onboarding Portal
  version: 0.0.1
servers:
  - url: https://api.cgnonboardingportal.pagopa.it/api/v1
security:
  - Bearer: [ ]
    UserRole: [ ]
tags:
  - name: agreement
    description: Agreement
  - name: profile
    description: Profile
  - name: discount
    description: Discount
  - name: document-template
    description: Document template
  - name: document
    description: Document
  - name: api-token
    description: API Token
  - name: help
    description: Help
  - name: geolocation-token
    description: API Geolocation Token
  - name: bucket
    description: Bucket Load
  - name: organizations-data
    description: Operator's Organizations Data
paths:
  /referent-organizations:
    get:
      tags:
        - organizations-data
      summary: Get list of operators by referent
      operationId: getOrganizations
      responses:
        "200":
          description: Get list of operators by referent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizations'
        "400":
          description: Session token is not valid
          content:
            application/json:
              schema:
                type: string
        "403":
          description: Forbidden
          content: { }

  /geolocation-token:
    get:
      tags:
        - geolocation-token
      summary: Get token for geolocation
      operationId: getGeolocationToken
      responses:
        "200":
          description: Token for geolocation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeolocationToken'
        "403":
          description: Forbidden
          content: { }
  /agreements:
    post:
      tags:
        - agreement
      summary: Create an agreement
      operationId: createAgreement
      responses:
        "200":
          description: Agreement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
        "403":
          description: Forbidden
          content: { }
  /agreements/{agreementId}/images:
    post:
      tags:
        - agreement
      summary: Upload an image
      operationId: uploadImage
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - image
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          description: Image uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadedImage'
        "400":
          description: Image error code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageErrorCode'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /agreements/{agreementId}/approval:
    post:
      tags:
        - agreement
      summary: Request agreement approval
      operationId: requestApproval
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Agreement approval requested
          content: { }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /agreements/{agreementId}/profile:
    get:
      tags:
        - profile
      summary: Get a profile
      operationId: getProfile
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
    put:
      tags:
        - profile
      summary: Update a profile
      operationId: updateProfile
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      requestBody:
        description: Profile to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
        required: true
      responses:
        "200":
          description: Profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
      x-codegen-request-body-name: profile
    post:
      tags:
        - profile
      summary: Create a profile
      operationId: createProfile
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      requestBody:
        description: Profile to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfile'
        required: true
      responses:
        "201":
          description: Profile created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
      x-codegen-request-body-name: profile
  /agreements/{agreementId}/discounts:
    get:
      tags:
        - discount
      summary: Get list of discounts
      operationId: getDiscounts
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of discounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discounts'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
    post:
      tags:
        - discount
      summary: Create a discount
      operationId: createDiscount
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      requestBody:
        description: Discount to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDiscount'
        required: true
      responses:
        "201":
          description: Discount created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
      x-codegen-request-body-name: discount
  /agreements/{agreementId}/discounts/bucket:
    post:
      tags:
        - bucket
      summary: uploadBucket
      operationId: uploadBucket
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - document
              type: object
              properties:
                document:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          description: Bucket uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketLoad'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode'
        "403":
          description: Forbidden
          content: { }
        "409":
          description: Conflict
          content: { }
  /agreements/{agreementId}/discounts/{discountId}/bucket-loading-progress:
    get:
      tags:
        - discount-bucket-loading-progress
      summary: Get the loading progress for the last bucket of codes of a discount
      operationId: getDiscountBucketCodeLoadingProgess
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          description: Discount id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Number of codes loaded for running bucket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountBucketCodeLoadingProgess'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /agreements/{agreementId}/discounts/{discountId}:
    get:
      tags:
        - discount
      summary: Get discount by id
      operationId: getDiscountById
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          description: Discount id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Discount
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
    put:
      tags:
        - discount
      summary: Update a discount
      operationId: updateDiscount
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          description: Discount id
          required: true
          schema:
            type: string
      requestBody:
        description: Discount to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDiscount'
        required: true
      responses:
        "200":
          description: Discount updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
        "409":
          description: Conflict
          content: { }
      x-codegen-request-body-name: discount
    delete:
      tags:
        - discount
      summary: Delete a discount
      operationId: deleteDiscount
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          description: Discount id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Discount deleted
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /agreements/{agreementId}/discounts/{discountId}/testing:
    post:
      tags:
        - discount
      summary: Set a discount ready to be tested
      operationId: testDiscount
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          description: Discount id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Discount ready to test
          content: { }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /agreements/{agreementId}/discounts/{discountId}/publishing:
    post:
      tags:
        - discount
      summary: Publish a discount
      operationId: publishDiscount
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          description: Discount id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Discount published
          content: { }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /agreements/{agreementId}/discounts/{discountId}/unpublishing:
    post:
      tags:
        - discount
      summary: Unpublish a discount making it a draft
      operationId: unpublishDiscount
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          description: Discount id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Discount suspended
          content: { }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /agreements/{agreementId}/document-templates/{documentType}:
    get:
      tags:
        - document-template
      summary: Download a document template
      operationId: downloadDocumentTemplate
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: documentType
          in: path
          description: Document type
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Document template
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /agreements/{agreementId}/documents:
    get:
      tags:
        - document
      summary: Get documents
      operationId: getDocuments
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of documents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documents'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /agreements/{agreementId}/documents/{documentType}:
    post:
      tags:
        - document
      summary: Upload a document
      operationId: uploadDocument
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: documentType
          in: path
          description: Document type
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - document
              type: object
              properties:
                document:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          description: Document uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
    delete:
      tags:
        - document
      summary: Delete a document
      operationId: deleteDocument
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: documentType
          in: path
          description: Document type
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Document deleted
          content: { }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /agreements/{agreementId}/api-tokens:
    post:
      tags:
        - api-token
      summary: Retrieve or Create API Tokens
      operationId: getTokens
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Api Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTokens'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode'
        "403":
          description: Forbidden
          content: { }
  /agreements/{agreementId}/api-tokens/{tokenType}:
    post:
      tags:
        - api-token
      summary: Regenerate Api Token
      operationId: regenerateToken
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: tokenType
          in: path
          description: Token type
          required: true
          schema:
            type: string
            enum:
              - primary
              - secondary
      responses:
        "200":
          description: New Api Tokens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTokens'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode'
        "403":
          description: Forbidden
          content: { }
  /agreements/{agreementId}/help:
    post:
      tags:
        - help
      summary: Send an help request
      operationId: sendHelpRequest
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      requestBody:
        description: Help request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelpRequest'
        required: true
      responses:
        "204":
          description: Request Received
          content: { }
      x-codegen-request-body-name: helpRequest
components:
  schemas:
    Agreement:
      required:
        - completedSteps
        - id
        - state
      type: object
      properties:
        id:
          type: string
        state:
          $ref: '#/components/schemas/AgreementState'
        imageUrl:
          type: string
        completedSteps:
          type: array
          items:
            $ref: '#/components/schemas/CompletedStep'
        entityType:
          $ref: '#/components/schemas/EntityType'
      discriminator:
        propertyName: state
    DraftAgreement:
      allOf:
        - $ref: '#/components/schemas/Agreement'
        - type: object
    PendingAgreement:
      allOf:
        - $ref: '#/components/schemas/Agreement'
        - type: object
    ApprovedAgreement:
      allOf:
        - $ref: '#/components/schemas/Agreement'
        - required:
            - endDate
            - startDate
          type: object
          properties:
            startDate:
              type: string
              format: date
            endDate:
              type: string
              format: date
            firstDiscountPublishingDate:
              type: string
              format: date
    RejectedAgreement:
      allOf:
        - $ref: '#/components/schemas/Agreement'
        - required:
            - reasonMessage
          type: object
          properties:
            reasonMessage:
              maxLength: 500
              type: string
    AgreementState:
      type: string
      enum:
        - DraftAgreement
        - PendingAgreement
        - ApprovedAgreement
        - RejectedAgreement
    CompletedStep:
      type: string
      enum:
        - Profile
        - Discount
        - Document
    UploadedImage:
      required:
        - imageUrl
      type: object
      properties:
        imageUrl:
          type: string
    EntityType:
      type: string
      enum:
        - Private
        - PublicAdministration
    CreateProfile:
      required:
        - description
        - description_de
        - description_en
        - fullName
        - legalOffice
        - legalRepresentativeFullName
        - legalRepresentativeTaxCode
        - pecAddress
        - referent
        - salesChannel
        - taxCodeOr\Vat
        - telephoneNumber
      type: object
      properties:
        fullName:
          type: string
        name:
          type: string
        name_en:
          type: string
        name_de:
          type: string
        taxCodeOrVat:
          maxLength: 16
          minLength: 8
          type: string
        pecAddress:
          maxLength: 100
          minLength: 5
          type: string
          format: email
        legalOffice:
          type: string
        telephoneNumber:
          maxLength: 15
          minLength: 4
          type: string
        legalRepresentativeFullName:
          type: string
        legalRepresentativeTaxCode:
          maxLength: 20
          minLength: 4
          type: string
        referent:
          $ref: '#/components/schemas/CreateReferent'
        description:
          type: string
        description_en:
          type: string
        description_de:
          type: string
        salesChannel:
          $ref: '#/components/schemas/SalesChannel'
        secondaryReferents:
          type: array
          items:
            $ref: '#/components/schemas/CreateReferent'
    UpdateProfile:
      required:
        - description
        - description_de
        - description_en
        - legalOffice
        - legalRepresentativeFullName
        - legalRepresentativeTaxCode
        - pecAddress
        - referent
        - salesChannel
        - telephoneNumber
      type: object
      properties:
        name:
          type: string
        name_en:
          type: string
        name_de:
          type: string
        pecAddress:
          maxLength: 100
          minLength: 5
          type: string
          format: email
        legalOffice:
          type: string
        telephoneNumber:
          maxLength: 15
          minLength: 4
          type: string
        legalRepresentativeFullName:
          type: string
        legalRepresentativeTaxCode:
          maxLength: 20
          minLength: 4
          type: string
        referent:
          $ref: '#/components/schemas/UpdateReferent'
        description:
          type: string
        description_en:
          type: string
        description_de:
          type: string
        salesChannel:
          $ref: '#/components/schemas/SalesChannel'
        secondaryReferents:
          type: array
          items:
            $ref: '#/components/schemas/UpdateReferent'
    Profile:
      required:
        - agreementId
        - description
        - description_de
        - description_en
        - fullName
        - id
        - legalOffice
        - legalRepresentativeFullName
        - legalRepresentativeTaxCode
        - pecAddress
        - referent
        - salesChannel
        - taxCodeOrVat
        - telephoneNumber
      type: object
      properties:
        id:
          type: string
        agreementId:
          type: string
        fullName:
          type: string
        name:
          type: string
        name_en:
          type: string
        name_de:
          type: string
        taxCodeOrVat:
          type: string
        pecAddress:
          maxLength: 100
          minLength: 5
          type: string
          format: email
        legalOffice:
          type: string
        telephoneNumber:
          maxLength: 15
          minLength: 4
          type: string
        legalRepresentativeFullName:
          type: string
        legalRepresentativeTaxCode:
          maxLength: 20
          minLength: 4
          type: string
        referent:
          $ref: '#/components/schemas/Referent'
        description:
          type: string
        description_en:
          type: string
        description_de:
          type: string
        salesChannel:
          $ref: '#/components/schemas/SalesChannel'
        secondaryReferents:
          type: array
          items:
            $ref: '#/components/schemas/Referent'
    Referent:
      required:
        - emailAddress
        - firstName
        - lastName
        - role
        - telephoneNumber
      type: object
      properties:
        firstName:
          maxLength: 100
          type: string
        lastName:
          maxLength: 100
          type: string
        role:
          maxLength: 100
          type: string
        emailAddress:
          maxLength: 100
          minLength: 5
          type: string
          format: email
        telephoneNumber:
          maxLength: 15
          minLength: 4
          type: string
    SalesChannel:
      required:
        - channelType
      type: object
      properties:
        channelType:
          $ref: '#/components/schemas/SalesChannelType'
      discriminator:
        propertyName: channelType
    OnlineChannel:
      allOf:
        - $ref: '#/components/schemas/SalesChannel'
        - required:
            - discountCodeType
            - websiteUrl
          type: object
          properties:
            websiteUrl:
              type: string
            discountCodeType:
              $ref: '#/components/schemas/DiscountCodeType'
    OfflineChannel:
      allOf:
        - $ref: '#/components/schemas/SalesChannel'
        - required:
            - addresses
          type: object
          properties:
            websiteUrl:
              type: string
            addresses:
              type: array
              items:
                $ref: '#/components/schemas/Address'
            allNationalAddresses:
              type: boolean
              default: false
    BothChannels:
      allOf:
        - $ref: '#/components/schemas/SalesChannel'
        - required:
            - addresses
            - websiteUrl
          type: object
          properties:
            websiteUrl:
              type: string
            addresses:
              type: array
              items:
                $ref: '#/components/schemas/Address'
            allNationalAddresses:
              type: boolean
              default: false
            discountCodeType:
              $ref: '#/components/schemas/DiscountCodeType'
    SalesChannelType:
      type: string
      enum:
        - OnlineChannel
        - OfflineChannel
        - BothChannels
    DiscountBucketCodeLoadingProgess:
      required:
        - loaded
        - percent
      type: object
      properties:
        loaded:
          type: integer
          format: int64
        percent:
          type: number
          format: float
    DiscountCodeType:
      type: string
      enum:
        - Static
        - API
        - LandingPage
        - Bucket
    CreateReferent:
      required:
        - emailAddress
        - firstName
        - lastName
        - role
        - telephoneNumber
      type: object
      properties:
        firstName:
          maxLength: 100
          type: string
        lastName:
          maxLength: 100
          type: string
        role:
          maxLength: 100
          type: string
        emailAddress:
          maxLength: 100
          minLength: 5
          type: string
          format: email
        telephoneNumber:
          maxLength: 15
          minLength: 4
          type: string
    UpdateReferent:
      required:
        - emailAddress
        - firstName
        - lastName
        - role
        - telephoneNumber
      type: object
      properties:
        firstName:
          maxLength: 100
          type: string
        lastName:
          maxLength: 100
          type: string
        role:
          maxLength: 100
          type: string
        emailAddress:
          maxLength: 100
          minLength: 5
          type: string
          format: email
        telephoneNumber:
          maxLength: 15
          minLength: 4
          type: string
    CreateDiscount:
      required:
        - endDate
        - name
        - name_de
        - name_en
        - productCategories
        - startDate
      type: object
      properties:
        name:
          maxLength: 100
          type: string
        name_en:
          maxLength: 100
          type: string
        name_de:
          maxLength: 100
          type: string
        description:
          maxLength: 250
          type: string
        description_en:
          maxLength: 250
          type: string
        description_de:
          maxLength: 250
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        discount:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
        productCategories:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
        condition:
          maxLength: 200
          type: string
        condition_en:
          maxLength: 200
          type: string
        condition_de:
          maxLength: 200
          type: string
        staticCode:
          maxLength: 100
          type: string
        visibleOnEyca:
          type: boolean
          default: false
        eycaLandingPageUrl:
          maxLength: 500
          type: string
        landingPageUrl:
          maxLength: 500
          type: string
        landingPageReferrer:
          maxLength: 100
          type: string
        lastBucketCodeLoadUid:
          maxLength: 255
          type: string
        lastBucketCodeLoadFileName:
          maxLength: 255
          type: string
        discountUrl:
          maxLength: 500
          type: string
    UpdateDiscount:
      required:
        - endDate
        - name
        - name_de
        - name_en
        - productCategories
        - startDate
      type: object
      properties:
        name:
          maxLength: 100
          type: string
        name_en:
          maxLength: 100
          type: string
        name_de:
          maxLength: 100
          type: string
        description:
          maxLength: 250
          type: string
        description_en:
          maxLength: 250
          type: string
        description_de:
          maxLength: 250
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        discount:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
        productCategories:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
        condition:
          maxLength: 200
          type: string
        condition_en:
          maxLength: 200
          type: string
        condition_de:
          maxLength: 200
          type: string
        staticCode:
          maxLength: 100
          type: string
        visibleOnEyca:
          type: boolean
          default: false
        eycaLandingPageUrl:
          maxLength: 500
          type: string
        landingPageUrl:
          maxLength: 500
          type: string
        landingPageReferrer:
          maxLength: 100
          type: string
        lastBucketCodeLoadUid:
          maxLength: 255
          type: string
        lastBucketCodeLoadFileName:
          maxLength: 255
          type: string
        discountUrl:
          maxLength: 500
          type: string
    Organizations:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
    Organization:
      required:
        - organization_name
        - organization_fiscal_code
        - email
        - token
      type: object
      properties:
        organization_name:
          type: string
        organization_fiscal_code:
          type: string
        email:
          type: string
        token:
          type: string
    Discounts:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Discount'
    Discount:
      required:
        - agreementId
        - endDate
        - id
        - name
        - name_de
        - name_en
        - productCategories
        - startDate
        - state
      type: object
      properties:
        id:
          type: string
        agreementId:
          type: string
        state:
          $ref: '#/components/schemas/DiscountState'
        name:
          maxLength: 100
          type: string
        name_en:
          maxLength: 100
          type: string
        name_de:
          maxLength: 100
          type: string
        description:
          maxLength: 250
          type: string
        description_en:
          maxLength: 250
          type: string
        description_de:
          maxLength: 250
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        discount:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
        productCategories:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
        condition:
          maxLength: 200
          type: string
        condition_en:
          maxLength: 200
          type: string
        condition_de:
          maxLength: 200
          type: string
        staticCode:
          maxLength: 100
          type: string
        visibleOnEyca:
          type: boolean
          default: false
        creationDate:
          type: string
          format: date
        suspendedReasonMessage:
          maxLength: 250
          type: string
        eycaLandingPageUrl:
          maxLength: 500
          type: string
        landingPageUrl:
          maxLength: 500
          type: string
        landingPageReferrer:
          maxLength: 100
          type: string
        lastBucketCodeLoadUid:
          maxLength: 255
          type: string
        lastBucketCodeLoadFileName:
          maxLength: 255
          type: string
        lastBucketCodeLoadStatus:
          $ref: '#/components/schemas/BucketCodeLoadStatus'
        discountUrl:
          maxLength: 500
          type: string
        testFailureReason:
          maxLength: 500
          type: string
    BucketCodeLoadStatus:
      type: string
      enum:
        - pending
        - running
        - finished
        - failed
    DiscountState:
      type: string
      enum:
        - draft
        - published
        - suspended
        - expired
        - test_pending
        - test_passed
        - test_failed
    ProductCategory:
      type: string
      enum:
        - BankingServices
        - CultureAndEntertainment
        - Health
        - Home
        - JobOffers
        - Learning
        - Sports
        - SustainableMobility
        - TelephonyAndInternet
        - Travelling
    Address:
      required:
        - fullAddress
      type: object
      properties:
        fullAddress:
          maxLength: 500
          minLength: 10
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
    Coordinates:
      required:
        - latitude
        - longitude
      type: object
      properties:
        latitude:
          type: number
        longitude:
          type: number
    Documents:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    Document:
      required:
        - documentTimestamp
        - documentType
        - documentUrl
      type: object
      properties:
        documentType:
          type: string
        documentUrl:
          type: string
        documentTimestamp:
          type: string
          format: date-time
    BucketLoad:
      required:
        - uid
      type: object
      properties:
        uid:
          maxLength: 255
          minLength: 1
          type: string
    ApiTokens:
      required:
        - primaryToken
        - secondaryToken
      type: object
      properties:
        primaryToken:
          type: string
        secondaryToken:
          type: string
    HelpRequest:
      required:
        - category
        - message
      type: object
      properties:
        category:
          type: string
          enum:
            - Access
            - DataFilling
            - Discounts
            - Documents
            - TechnicalProblem
            - CgnOwnerReporting
            - Suggestions
            - Other
        topic:
          type: string
        message:
          maxLength: 200
          type: string
    GeolocationToken:
      required:
        - token
      type: object
      properties:
        token:
          minLength: 1
          type: string
    ImageErrorCode:
      type: string
      enum:
        - INVALID_IMAGE_TYPE
        - INVALID_DIMENSION
        - GENERIC
        - IMAGE_SIZE_EXCEEDED
    ErrorCodeEnum:
      type: string
      enum:
        - CANNOT_GET_BUCKET_CODE_FOR_DISCOUNT_NOT_TEST_PENDING_OR_NOT_PUBLISHED
        - VISIBLE_ON_EYCA_NOT_CONSISTENT_WITH_URL
        - CANNOT_HAVE_EMPTY_STATIC_CODE_FOR_PROFILE_WITH_STATIC_CODE
        - CANNOT_HAVE_EMPTY_LANDING_PAGE_URL_FOR_PROFILE_LANDING_PAGE
        - CANNOT_PROCEED_WITH_DISCOUNT_WITH_BUCKET_LOAD_IN_PROGRESS
        - CANNOT_PROCEED_WITH_DISCOUNT_WITH_NOT_APPROVED_AGREEMENT
        - CANNOT_PROCEED_WITH_SUSPENDED_DISCOUNT
        - CANNOT_PROCEED_WITH_EXPIRED_DISCOUNT
        - CANNOT_PROCEED_WITH_ONLINE_DISCOUNT_WITH_NOT_PASSED_TEST
        - MAX_NUMBER_OF_PUBLISHABLE_DISCOUNTS_REACHED
        - DISCOUNT_CANNOT_HAVE_MORE_THAN_TWO_CATEGORIES
        - AGREEMENT_NOT_APPROVABLE_FOR_WRONG_MANDATORY_DOCUMENTS
        - AGREEMENT_NOT_FOUND
        - DISCOUNT_NOT_FOUND
        - PROFILE_NOT_FOUND
        - DOCUMENT_NOT_FOUND
        - DOCUMENT_TYPE_NOT_VALID
        - DISCOUNT_NOT_RELATED_TO_AGREEMENT_PROVIDED
        - CANNOT_TEST_DISCOUNTS_WITH_OFFLINE_MERCHANTS
        - CANNOT_UNPUBLISH_DISCOUNT_NOT_PUBLISHED
        - CANNOT_SUSPEND_DISCOUNT_NOT_PUBLISHED
        - DISCOUNT_CANNOT_REFERENCE_TO_MISSING_BUCKET_FILE_FOR_DISCOUNT_WITH_BUCKET
        - CANNOT_SET_DISCOUNT_STATE_FOR_DISCOUNT_NOT_IN_TEST_PENDING
        - CANNOT_GET_BUCKET_CODE_FOR_DISCOUNT_NOT_IN_TEST_PENDING
        - CANNOT_GET_BUCKET_CODE_FOR_DISCOUNT_NO_BUCKET
        - CANNOT_LOAD_BUCKET_CODE_FOR_DISCOUNT_NO_BUCKET
        - MAX_ALLOWED_BUCKET_CODE_LENGTH_NOT_RESPECTED
        - BUCKET_CODES_MUST_BE_ALPHANUM_WITH_AT_LEAST_ONE_DIGIT_AND_ONE_CHAR
        - NOT_ALLOWED_SPECIAL_CHARS
        - ONE_OR_MORE_CODES_ARE_NOT_VALID
        - CANNOT_PROCEED_AGREEMENT_NOT_IN_PENDING
        - AGREEMENT_NOT_ASSIGNED_TO_CURRENT_USER
        - MANDATORY_DOCUMENT_ARE_MISSING
        - AGREEMENT_ALREADY_ASSIGNED_TO_CURRENT_USER
        - AGREEMENT_NO_LONGER_ASSIGNED
        - AGREEMENT_USER_NOT_FOUND
        - CANNOT_RETRIEVE_TOKEN_FOR_PROFILE_NOT_API
        - TOKEN_PARAMETER_NOT_VALID
        - PDF_NAME_OR_EXTENSION_NOT_VALID
        - PDF_RENDERING_ERROR
        - CSV_NAME_OR_EXTENSION_NOT_VALID
        - CSV_DATA_NOT_VALID
        - IMAGE_DATA_NOT_VALID
        - IMAGE_NAME_OR_EXTENSION_NOT_VALID
        - IMAGE_DIMENSION_NOT_VALID
        - IMAGE_AZURE_UPLOAD_ERROR
        - ADHESION_DOCUMENT_NOT_REQUIRED_FOR_PA
        - CANNOT_UPDATE_DISCOUNT_BUCKET_WHILE_PROCESSING_IS_RUNNING
        - CANNOT_LOAD_BUCKET_FOR_NOT_RESPECTED_MINIMUM_BOUND
        - PROFILE_ALREADY_EXISTS_FOR_AGREEMENT_PROVIDED
        - CANNOT_BIND_MORE_THAN_TEN_ORGANIZATIONS
        - CANNOT_RETRIEVE_BUCKET_CODE_FROM_DISCOUNT_WITH_EMPTY_BUCKET
    ErrorCodeString:
      type: string
    ErrorCode:
      description: A payload used for error responses.
      allOf:
        - $ref: '#/components/schemas/ErrorCodeString'
        - $ref: '#/components/schemas/ErrorCodeEnum'
      x-one-of: true
  responses:
    InvalidRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorCode'
    Forbidden:
      description: Forbidden
      content: { }
    NotFound:
      description: Not found
      content: { }
    Conflict:
      description: Conflict
      content: { }
  parameters:
    AgreementId:
      name: agreementId
      in: path
      description: Agreement id
      required: true
      schema:
        type: string
    DiscountId:
      name: discountId
      in: path
      description: Discount id
      required: true
      schema:
        type: string
    DocumentType:
      name: documentType
      in: path
      description: Document type
      required: true
      schema:
        type: string
  securitySchemes:
    Bearer:
      type: apiKey
      description: JWT Authorization header using the Bearer scheme
      name: Authorization
      in: header
    UserRole:
      type: apiKey
      description: Custom header containing requesting user role
      name: X-CGN-USER-ROLE
      in: header
x-original-swagger-version: "2.0"