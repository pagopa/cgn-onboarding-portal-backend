# Only manual triggers
trigger: none
pr: none

pool:
  vmImage: 'ubuntu-20.04'

parameters:
  - name: environment
    displayName: Target Environment
    type: string
    default: uat
    values:
      - uat
      - prod

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  BUILD_NUMBER: $(Build.BuildNumber)
  imageRepository: 'cgn-onboarding-portal-backend'
  ${{ if eq(parameters['environment'], 'uat') }}:
    dockerRegistryServiceConnection: $(UAT_CONTAINER_REGISTRY)
    dockerNamespace: cgnonboardingportaluarc.azurecr.io
    connectedServiceName: $(UAT_AZURE_SUBSCRIPTION)
    webAppName: $(UAT_WEB_APP_NAME)
  ${{ if eq(parameters['environment'], 'prod') }}:
    dockerRegistryServiceConnection: $(PROD_CONTAINER_REGISTRY)
    dockerNamespace: cgnonboardingportalparc.azurecr.io
    connectedServiceName: $(PROD_AZURE_SUBSCRIPTION)
    webAppName: $(PROD_WEB_APP_NAME)
steps:
  - task: Bash@3
    displayName: Check Version and Branch
    inputs:
      targetType: 'inline'
      script: |
        version=$(cat pom.xml | grep '^.*<version>' | sed -n 2p | awk -F'[><]' '{print $3}')
        branch="$(Build.SourceBranch)"
        if [[ "$branch" != "refs/heads/master" && ! "$branch" =~ "refs/tags/.*" && "${{ parameters.environment }}" == "prod" ]]; then
           echo "Deploy branch $branch is not allowed."
           exit 1
        fi
        if [[ "$version" == *SNAPSHOT && "${{ parameters.environment }}" == "prod" ]]; then
           echo "Version $version is not allowed."
           exit 1
        fi
      failOnStderr: true

  - task: Cache@2
    inputs:
      key: 'maven | "$(Agent.OS)" | pom.xml'
      restoreKeys: |
        maven | "$(Agent.OS)"
        maven
      path: $(MAVEN_CACHE_FOLDER)
    displayName: Cache Maven local repo

  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'
      sonarQubeRunAnalysis: false

  - task: Bash@3
    displayName: Get POM version
    name: getpomversion
    inputs:
      targetType: 'inline'
      script: |
        version=$(cat pom.xml | grep '^.*<version>' | sed -n 2p | awk -F'[><]' '{print $3}')
        echo "##vso[task.setvariable variable=outputpomversion;isOutput=true]$version"
      failOnStderr: true

  - task: Docker@2
    displayName: Build and push an image to container registry
    inputs:
      containerRegistry: '$(dockerRegistryServiceConnection)'
      repository: '$(imageRepository)'
      command: 'buildAndPush'
      tags: |
        $(Build.BuildId)
        latest
        $(getpomversion.outputpomversion)

  - task: AzureRMWebAppDeployment@4
    displayName: Azure App Service Deploy
    inputs:
      appType: webAppContainer
      ConnectedServiceName: '$(connectedServiceName)'
      WebAppName: '$(webAppName)'
      DockerNamespace: '$(dockerNamespace)'
      DockerRepository: '$(imageRepository)'
      DockerImageTag: '$(getpomversion.outputpomversion)'
