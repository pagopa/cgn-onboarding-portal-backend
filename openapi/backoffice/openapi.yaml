openapi: 3.0.1
info:
  title: CGN Onboarding Portal Backoffice
  description: Carta Giovani Nazionale Onboarding Portal Backoffice
  version: 0.0.1
servers:
  - url: https://api.cgn.pagopa.it/backoffice/v1
security:
  - Bearer: [ ]
    UserRole: [ ]
tags:
  - name: agreement
    description: Agreement
  - name: document
    description: Document
  - name: discount
    description: Discount
paths:
  /agreement-requests:
    get:
      tags:
        - agreement
      summary: Get list of agreements
      operationId: getAgreements
      parameters:
        - name: states
          in: query
          description: Values from `AgreementState`
          schema:
            type: string
        - name: assignee
          in: query
          description: Assigned agreement assignee
          schema:
            type: string
            enum:
              - Me
              - Others
        - name: profileFullName
          in: query
          description: String to search in profile full name
          schema:
            type: string
        - name: requestDateFrom
          in: query
          description: Agreement request date lower bound
          schema:
            type: string
            format: date
        - name: requestDateTo
          in: query
          description: Agreement request date upper bound
          schema:
            type: string
            format: date
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            default: 20
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            default: 0
        - name: sortColumn
          in: query
          description: Sort by column
          schema:
            type: string
            enum:
              - Operator
              - RequestDate
              - State
              - Assignee
        - name: sortDirection
          in: query
          description: Sort Direction
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
      responses:
        "200":
          description: List of agreements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreements'
        "403":
          description: Forbidden
          content: { }
  /agreement-requests/{agreementId}/assignee:
    put:
      tags:
        - agreement
      summary: Assign an agreement to the user
      operationId: assignAgreement
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Agreement assigned to the user
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
        "409":
          description: Conflict
          content: { }
    delete:
      tags:
        - agreement
      summary: Unassign an agreement to the user
      operationId: unassignAgreement
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Agreement unassigned to the user
          content: { }
        "400":
          description: Bad request
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
        "409":
          description: Conflict
          content: { }
  /agreement-requests/{agreementId}/approval:
    post:
      tags:
        - agreement
      summary: Approve an agreement
      operationId: approveAgreement
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Agreement approved
          content: { }
        "400":
          description: Bad request
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
        "409":
          description: Conflict
          content: { }
  /agreement-requests/{agreementId}/refusal:
    post:
      tags:
        - agreement
      summary: Reject an agreement
      operationId: rejectAgreement
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      requestBody:
        description: Agreement refusal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefuseAgreement'
        required: true
      responses:
        "204":
          description: Agreement rejected
          content: { }
        "400":
          description: Bad request
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
        "409":
          description: Conflict
          content: { }
      x-codegen-request-body-name: refusal
  /agreement-requests/{agreementId}/documents:
    get:
      tags:
        - document
      summary: Get documents
      operationId: getDocuments
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of documents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documents'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /agreement-requests/{agreementId}/documents/{documentType}:
    post:
      tags:
        - document
      summary: Upload a document
      operationId: uploadDocument
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: documentType
          in: path
          description: Document type
          required: true
          schema:
            type: string
            enum:
              - Agreement
              - AdhesionRequest
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - document
              type: object
              properties:
                document:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          description: Document uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        "400":
          description: Bad request
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
        "409":
          description: Conflict
          content: { }
    delete:
      tags:
        - document
      summary: Delete a document
      operationId: deleteDocument
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: documentType
          in: path
          description: Document type
          required: true
          schema:
            type: string
            enum:
              - Agreement
              - AdhesionRequest
      responses:
        "204":
          description: Document deleted
          content: { }
        "400":
          description: Bad request
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /agreement-requests/{agreementId}/discounts/{discountId}/suspension:
    post:
      tags:
        - discount
      summary: Suspend a discount
      operationId: suspendDiscount
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          description: Discount id
          required: true
          schema:
            type: string
      requestBody:
        description: Discount suspension
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendDiscount'
        required: true
      responses:
        "204":
          description: Discount suspended
          content: { }
        "400":
          description: Bad request
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
        "409":
          description: Conflict
          content: { }
      x-codegen-request-body-name: suspension
  /agreement-requests/{agreementId}/discounts/{discountId}/bucket-code:
    get:
      tags:
        - discount
      summary: Get a bucket code for discount
      operationId: getDiscountBucketCode
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          description: Discount id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A bucket code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketCode'
        "400":
          description: Bad request
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
        "409":
          description: Conflict
          content: { }
  /agreement-requests/{agreementId}/discounts/{discountId}/test-passed:
    post:
      tags:
        - discount
      summary: Mark as test passed
      operationId: setDiscountTestPassed
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          description: Discount id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Test passed
          content: { }
        "400":
          description: Bad request
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
        "409":
          description: Conflict
          content: { }
  /agreement-requests/{agreementId}/discounts/{discountId}/test-failed:
    post:
      tags:
        - discount
      summary: Mark as test failed with a reason
      operationId: setDiscountTestFailed
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          description: Discount id
          required: true
          schema:
            type: string
      requestBody:
        description: Failure reason
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailureReason'
        required: true
      responses:
        "204":
          description: Test failed
          content: { }
        "400":
          description: Bad request
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
        "409":
          description: Conflict
          content: { }
      x-codegen-request-body-name: failure
  /approved-agreements:
    get:
      tags:
        - agreement
      summary: Get list of approved agreements
      operationId: getApprovedAgreements
      parameters:
        - name: profileFullName
          in: query
          description: String to search in profile full name
          schema:
            type: string
        - name: lastUpdateDateFrom
          in: query
          description: Agreement last update date lower bound
          schema:
            type: string
            format: date
        - name: lastUpdateDateTo
          in: query
          description: Agreement last update date upper bound
          schema:
            type: string
            format: date
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            default: 20
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            default: 0
        - name: sortColumn
          in: query
          description: Sort by column
          schema:
            type: string
            enum:
              - Operator
              - AgreementDate
              - LastModifyDate
              - PublishedDiscounts
        - name: sortDirection
          in: query
          description: Sort Direction
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
      responses:
        "200":
          description: List of approved agreements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovedAgreements'
        "403":
          description: Forbidden
          content: { }
  /approved-agreements/{agreementId}:
    get:
      tags:
        - agreement
      summary: Get approved agreement
      operationId: getApprovedAgreement
      parameters:
        - name: agreementId
          in: path
          description: Agreement id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Approved agreement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovedAgreementDetail'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /organizations:
    get:
      tags:
        - attributeauthority
      summary: Get organizations
      description: Get all organizations
      operationId: getOrganizations
      parameters:
        - name: searchQuery
          in: query
          description: String to search in organization name o fiscal code
          schema:
            maxLength: 100
            minLength: 1
            type: string
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            default: 0
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            default: 20
        - name: sortBy
          in: query
          description: The field to sort by
          schema:
            type: string
            enum:
              - fiscalCode
              - name
              - pec
              - insertedAt
        - name: sortDirection
          in: query
          description: Sort Direction
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
      responses:
        "200":
          description: List of organizations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizations'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
    post:
      tags:
        - attributeauthority
      summary: Upsert organization.
      description: Update or insert an organization.
      operationId: upsertOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationWithReferents'
        required: false
      responses:
        "200":
          description: Upserted organization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationWithReferents'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
      x-codegen-request-body-name: body
  /organization/{keyOrganizationFiscalCode}:
    get:
      tags:
        - attributeauthority
      summary: Get organization
      description: Get an organization by fiscal code
      operationId: getOrganization
      parameters:
        - name: keyOrganizationFiscalCode
          in: path
          description: Organization fiscal code
          required: true
          schema:
            maxLength: 16
            minLength: 8
            type: string
      responses:
        "200":
          description: An organization with referents.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationWithReferentsAndStatus'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
    delete:
      tags:
        - attributeauthority
      summary: Delete organization.
      description: Delete an organization
      operationId: deleteOrganization
      parameters:
        - name: keyOrganizationFiscalCode
          in: path
          description: Organization fiscal code
          required: true
          schema:
            maxLength: 16
            minLength: 8
            type: string
      responses:
        "200":
          description: Deleted.
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /organization/{keyOrganizationFiscalCode}/referents:
    get:
      tags:
        - attributeauthority
      summary: Get referents
      description: Get all referents for a organization
      operationId: getReferents
      parameters:
        - name: keyOrganizationFiscalCode
          in: path
          description: Organization fiscal code
          required: true
          schema:
            maxLength: 16
            minLength: 8
            type: string
      responses:
        "200":
          description: List of referents.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Referents'
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
    post:
      tags:
        - attributeauthority
      summary: Insert referent.
      description: Insert a referent fiscalcode.
      operationId: insertReferent
      parameters:
        - name: keyOrganizationFiscalCode
          in: path
          description: Organization fiscal code
          required: true
          schema:
            maxLength: 16
            minLength: 8
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferentFiscalCode'
        required: true
      responses:
        "200":
          description: Inserted referent.
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
      x-codegen-request-body-name: body
  /organization/{keyOrganizationFiscalCode}/referents/{referentFiscalCode}:
    delete:
      tags:
        - attributeauthority
      summary: Delete referent.
      description: Delete a referent
      operationId: deleteReferent
      parameters:
        - name: keyOrganizationFiscalCode
          in: path
          description: Organization fiscal code
          required: true
          schema:
            maxLength: 16
            minLength: 8
            type: string
        - name: referentFiscalCode
          in: path
          description: Referent fiscal code
          required: true
          schema:
            pattern: "^[A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST][0-9LMNPQRSTUV]{2}[A-Z][0-9LMNPQRSTUV]{3}[A-Z]$"
            type: string
      responses:
        "200":
          description: Deleted.
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /export/agreements:
    get:
      tags:
        - exports
      summary: Download an export of agreements in CSV format
      operationId: exportAgreements
      responses:
        "200":
          description: CSV export of all agreements
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
  /export/eyca-discounts:
    get:
      tags:
        - exports
      summary: Download an export of eyca discounts in CSV format
      operationId: exportEycaDiscounts
      responses:
        "200":
          description: CSV export of all agreements
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content: { }
        "403":
          description: Forbidden
          content: { }
        "404":
          description: Not found
          content: { }
components:
  schemas:
    Agreements:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Agreement'
        total:
          type: integer
    ApprovedAgreements:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ApprovedAgreement'
        total:
          type: integer
    Agreement:
      required:
        - id
        - requestDate
        - state
      type: object
      properties:
        id:
          type: string
        state:
          $ref: '#/components/schemas/AgreementState'
        requestDate:
          type: string
          format: date
        profile:
          $ref: '#/components/schemas/Profile'
        discounts:
          $ref: '#/components/schemas/Discounts'
        documents:
          $ref: '#/components/schemas/Documents'
        entityType:
          $ref: '#/components/schemas/EntityType'
      discriminator:
        propertyName: state
    PendingAgreement:
      allOf:
        - $ref: '#/components/schemas/Agreement'
        - type: object
    AssignedAgreement:
      allOf:
        - $ref: '#/components/schemas/Agreement'
        - required:
            - assignee
          type: object
          properties:
            assignee:
              $ref: '#/components/schemas/Assignee'
    ApprovedAgreement:
      required:
        - agreementId
        - agreementLastUpdateDate
        - agreementStartDate
        - fullName
        - publishedDiscounts
        - testPending
      type: object
      properties:
        agreementId:
          type: string
        fullName:
          type: string
        agreementStartDate:
          type: string
          format: date
        agreementLastUpdateDate:
          type: string
          format: date
        publishedDiscounts:
          type: integer
          format: int64
        testPending:
          type: boolean
          default: false
        entityType:
          $ref: '#/components/schemas/EntityType'
    ApprovedAgreementDetail:
      required:
        - agreementId
        - documents
        - profile
      type: object
      properties:
        agreementId:
          type: string
        profile:
          $ref: '#/components/schemas/ApprovedAgreementProfile'
        discounts:
          $ref: '#/components/schemas/ApprovedAgreementDiscounts'
        documents:
          $ref: '#/components/schemas/Documents'
    AgreementState:
      type: string
      enum:
        - PendingAgreement
        - AssignedAgreement
        - ApprovedAgreement
        - RejectedAgreement
    EntityType:
      type: string
      enum:
        - Private
        - PublicAdministration
    RefuseAgreement:
      required:
        - reasonMessage
      type: object
      properties:
        reasonMessage:
          maxLength: 500
          type: string
    Assignee:
      required:
        - fullName
      type: object
      properties:
        fullName:
          type: string
    Profile:
      required:
        - agreementId
        - fullName
        - id
        - referent
      type: object
      properties:
        id:
          type: string
        agreementId:
          type: string
        fullName:
          type: string
        referent:
          $ref: '#/components/schemas/Referent'
    ApprovedAgreementProfile:
      required:
        - description
        - description_de
        - description_en
        - fullName
        - lastUpateDate
        - legalOffice
        - legalRepresentativeFullName
        - legalRepresentativeTaxCode
        - pecAddress
        - referent
        - salesChannel
        - taxCodeOrVat
        - telephoneNumber
      type: object
      properties:
        name:
          type: string
        name_en:
          type: string
        name_de:
          type: string
        description:
          type: string
        description_en:
          type: string
        description_de:
          type: string
        salesChannel:
          $ref: '#/components/schemas/SalesChannel'
        imageUrl:
          type: string
        lastUpateDate:
          type: string
          format: date
        fullName:
          type: string
        taxCodeOrVat:
          maxLength: 16
          minLength: 11
          type: string
        pecAddress:
          maxLength: 100
          minLength: 5
          type: string
          format: email
        legalOffice:
          maxLength: 255
          type: string
        telephoneNumber:
          maxLength: 15
          minLength: 4
          type: string
        legalRepresentativeFullName:
          type: string
        legalRepresentativeTaxCode:
          maxLength: 20
          minLength: 4
          type: string
        referent:
          $ref: '#/components/schemas/ApprovedAgreementReferent'
        entityType:
          $ref: '#/components/schemas/EntityType'
    Referent:
      required:
        - emailAddress
        - firstName
        - lastName
        - telephoneNumber
      type: object
      properties:
        firstName:
          maxLength: 100
          type: string
        lastName:
          maxLength: 100
          type: string
        emailAddress:
          maxLength: 100
          minLength: 5
          type: string
        telephoneNumber:
          maxLength: 15
          minLength: 4
          type: string
    ApprovedAgreementReferent:
      required:
        - emailAddress
        - firstName
        - lastName
        - role
        - telephoneNumber
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        emailAddress:
          maxLength: 100
          minLength: 5
          type: string
          format: email
        telephoneNumber:
          maxLength: 15
          minLength: 4
          type: string
        role:
          maxLength: 100
          type: string
    Discounts:
      type: array
      items:
        $ref: '#/components/schemas/Discount'
    ApprovedAgreementDiscounts:
      type: array
      items:
        $ref: '#/components/schemas/ApprovedAgreementDiscount'
    Discount:
      required:
        - agreementId
        - id
        - name
        - state
      type: object
      properties:
        id:
          type: string
        agreementId:
          type: string
        state:
          $ref: '#/components/schemas/DiscountState'
        name:
          maxLength: 100
          type: string
        name_en:
          maxLength: 100
          type: string
        name_de:
          maxLength: 100
          type: string
    ApprovedAgreementDiscount:
      required:
        - condition
        - description
        - endDate
        - id
        - lastUpateDate
        - name
        - productCategories
        - startDate
        - state
        - visibleOnEyca
      type: object
      properties:
        id:
          type: string
        name:
          maxLength: 100
          type: string
        name_en:
          maxLength: 100
          type: string
        name_de:
          maxLength: 100
          type: string
        description:
          type: string
        description_en:
          type: string
        description_de:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        discount:
          maximum: 99
          minimum: 1
          type: integer
          format: int32
        productCategories:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
        condition:
          type: string
        condition_en:
          type: string
        condition_de:
          type: string
        lastUpateDate:
          type: string
          format: date
        state:
          $ref: '#/components/schemas/DiscountState'
        discountUrl:
          maxLength: 500
          type: string
        staticCode:
          maxLength: 100
          type: string
        eycaLandingPageUrl:
          maxLength: 500
          type: string
        landingPageUrl:
          maxLength: 500
          type: string
        landingPageReferrer:
          maxLength: 100
          type: string
        testFailureReason:
          maxLength: 500
          type: string
        visibleOnEyca:
          type: boolean
          default: false
    DiscountState:
      type: string
      enum:
        - draft
        - published
        - suspended
        - expired
        - test_pending
        - test_passed
        - test_failed
    ProductCategory:
      type: string
      enum:
        - BankingServices
        - CultureAndEntertainment
        - Health
        - Home
        - JobOffers
        - Learning
        - Sports
        - SustainableMobility
        - TelephonyAndInternet
        - Travelling
    SalesChannel:
      required:
        - channelType
      type: object
      properties:
        channelType:
          $ref: '#/components/schemas/SalesChannelType'
      discriminator:
        propertyName: channelType
    OnlineChannel:
      allOf:
        - $ref: '#/components/schemas/SalesChannel'
        - required:
            - discountCodeType
            - websiteUrl
          type: object
          properties:
            websiteUrl:
              type: string
            discountCodeType:
              $ref: '#/components/schemas/DiscountCodeType'
    OfflineChannel:
      allOf:
        - $ref: '#/components/schemas/SalesChannel'
        - required:
            - addresses
          type: object
          properties:
            websiteUrl:
              type: string
            addresses:
              type: array
              items:
                maxLength: 500
                minLength: 10
                type: string
            allNationalAddresses:
              type: boolean
              default: false
    BothChannels:
      allOf:
        - $ref: '#/components/schemas/SalesChannel'
        - required:
            - addresses
            - websiteUrl
          type: object
          properties:
            websiteUrl:
              type: string
            addresses:
              type: array
              items:
                maxLength: 500
                minLength: 10
                type: string
            allNationalAddresses:
              type: boolean
              default: false
            discountCodeType:
              $ref: '#/components/schemas/DiscountCodeType'
    SalesChannelType:
      type: string
      enum:
        - OnlineChannel
        - OfflineChannel
        - BothChannels
    DiscountCodeType:
      type: string
      enum:
        - Static
        - API
        - LandingPage
        - Bucket
    Documents:
      type: array
      items:
        $ref: '#/components/schemas/Document'
    Document:
      required:
        - creationDate
        - documentType
        - documentUrl
      type: object
      properties:
        documentType:
          $ref: '#/components/schemas/DocumentType'
        documentUrl:
          type: string
        creationDate:
          type: string
          format: date
    DocumentType:
      type: string
      enum:
        - Agreement
        - AdhesionRequest
    SuspendDiscount:
      required:
        - reasonMessage
      type: object
      properties:
        reasonMessage:
          maxLength: 500
          type: string
    BucketCode:
      required:
        - code
      type: object
      properties:
        code:
          type: string
    FailureReason:
      required:
        - reasonMessage
      type: object
      properties:
        reasonMessage:
          maxLength: 500
          type: string
    KeyOrganizationFiscalCode:
      required:
        - keyOrganizationFiscalCode
      type: object
      properties:
        keyOrganizationFiscalCode:
          maxLength: 16
          minLength: 8
          type: string
    OrganizationFiscalCode:
      required:
        - organizationFiscalCode
      type: object
      properties:
        organizationFiscalCode:
          maxLength: 16
          minLength: 8
          type: string
    OrganizationName:
      required:
        - organizationName
      type: object
      properties:
        organizationName:
          maxLength: 100
          minLength: 1
          type: string
    ReferentFiscalCode:
      type: object
      properties:
        referentFiscalCode:
          pattern: "^[A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST][0-9LMNPQRSTUV]{2}[A-Z][0-9LMNPQRSTUV]{3}[A-Z]$"
          type: string
    Organization:
      allOf:
        - $ref: '#/components/schemas/OrganizationFiscalCode'
        - $ref: '#/components/schemas/OrganizationName'
        - required:
            - pec
          type: object
          properties:
            pec:
              maxLength: 100
              minLength: 5
              type: string
              format: email
            insertedAt:
              type: string
              format: date
            entityType:
              $ref: '#/components/schemas/EntityType'
    Referents:
      type: array
      items:
        maxLength: 16
        minLength: 16
        type: string
    OrganizationStatus:
      type: string
      enum:
        - Enabled
        - Draft
        - Pending
        - Active
    OrganizationWithReferents:
      allOf:
        - $ref: '#/components/schemas/KeyOrganizationFiscalCode'
        - $ref: '#/components/schemas/Organization'
        - required:
            - referents
          type: object
          properties:
            referents:
              $ref: '#/components/schemas/Referents'
    OrganizationWithReferentsAndStatus:
      allOf:
        - $ref: '#/components/schemas/OrganizationWithReferents'
        - required:
            - status
          type: object
          properties:
            status:
              $ref: '#/components/schemas/OrganizationStatus'
    Organizations:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationWithReferentsAndStatus'
        count:
          type: integer
  responses:
    InvalidRequest:
      description: Bad request
      content: { }
    Forbidden:
      description: Forbidden
      content: { }
    NotFound:
      description: Not found
      content: { }
    Conflict:
      description: Conflict
      content: { }
  parameters:
    AgreementId:
      name: agreementId
      in: path
      description: Agreement id
      required: true
      schema:
        type: string
    PageSize:
      name: pageSize
      in: query
      description: Page size
      schema:
        type: integer
        default: 20
    PageNumber:
      name: page
      in: query
      description: Page number
      schema:
        type: integer
        default: 0
    DiscountId:
      name: discountId
      in: path
      description: Discount id
      required: true
      schema:
        type: string
    DocumentType:
      name: documentType
      in: path
      description: Document type
      required: true
      schema:
        type: string
        enum:
          - Agreement
          - AdhesionRequest
    RequestColumnSort:
      name: sortColumn
      in: query
      description: Sort by column
      schema:
        type: string
        enum:
          - Operator
          - RequestDate
          - State
          - Assignee
    ApprovedColumnSort:
      name: sortColumn
      in: query
      description: Sort by column
      schema:
        type: string
        enum:
          - Operator
          - AgreementDate
          - LastModifyDate
          - PublishedDiscounts
    KeyOrganizationFiscalCode:
      name: keyOrganizationFiscalCode
      in: path
      description: Organization fiscal code
      required: true
      schema:
        maxLength: 16
        minLength: 8
        type: string
    ReferentFiscalCode:
      name: referentFiscalCode
      in: path
      description: Referent fiscal code
      required: true
      schema:
        pattern: "^[A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST][0-9LMNPQRSTUV]{2}[A-Z][0-9LMNPQRSTUV]{3}[A-Z]$"
        type: string
    SearchQuery:
      name: searchQuery
      in: query
      description: String to search in organization name o fiscal code
      schema:
        maxLength: 100
        minLength: 1
        type: string
    SortOrganizationsBy:
      name: sortBy
      in: query
      description: The field to sort by
      schema:
        type: string
        enum:
          - fiscalCode
          - name
          - pec
          - insertedAt
    SortDirection:
      name: sortDirection
      in: query
      description: Sort Direction
      schema:
        type: string
        default: ASC
        enum:
          - ASC
          - DESC
  requestBodies:
    ReferentFiscalCodeBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReferentFiscalCode'
      required: true
  securitySchemes:
    Bearer:
      type: apiKey
      description: JWT Authorization header using the Bearer scheme
      name: Authorization
      in: header
    UserRole:
      type: apiKey
      description: Custom header containing requesting user role
      name: X-CGN-USER-ROLE
      in: header
x-original-swagger-version: "2.0"