version: '2'

services:
  app:
    image: 'cgn-onboarding-portal-backend:latest'
    cpus: 1.0
    mem_limit: "1g"
    build:
      context: .
    container_name: app
    ports:
    - 9090:9090
    depends_on:
      - db
      - azurite
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE=5MB
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=compose-postgres
      - SPRING_DATASOURCE_PASSWORD=compose-postgres
      - CGN_PE_STORAGE_AZURE_BLOB_ENDPOINT=http://azurite:10000/devstoreaccount1
      - JAVA_OPTS=-XX:+UseG1GC -XX:MaxGCPauseMillis=100 -XX:+UseStringDeduplication
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`app.localhost`) || PathPrefix(`/app`)"
      - "traefik.http.routers.app.entrypoints=web"
      # apply middleware to route
      - "traefik.http.routers.app.middlewares=testHeader,app-stripprefix"
      - "traefik.docker.network=pe-net"
      - "traefik.http.services.app.loadbalancer.server.port=9090"
    networks:
      - pe-net
  
  traefik:
    image: traefik:v2.0
    command: |-
      --entrypoints.web.address=:80
      --providers.docker=true
      --providers.docker.network=cgn-onboarding-portal-backend_pe-net
      --log.level=INFO
    ports:
      - 80:80
    networks:
      - pe-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.http.middlewares.testHeader.headers.customrequestheaders.x-cgn-user-role=ROLE_MERCHANT"
      - "traefik.http.middlewares.app-stripprefix.stripprefix.prefixes=/app"

  db:
    image: 'postgis/postgis:11-2.5'
    container_name: db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=compose-postgres
      - POSTGRES_PASSWORD=compose-postgres
    networks:
      - pe-net

  azurite:
    container_name: azurite
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    networks:
      - pe-net

  fixtures:
    build: 
      context: ./docker/fixtures
      dockerfile: Dockerfile
    env_file: 
      - docker/fixtures/fixtures.env
    depends_on: 
      - azurite
    networks:
      - pe-net

  spid-testenv2:
    container_name: spid-testenv2
    image: italia/spid-testenv2:latest
    restart: unless-stopped
    ports:
      - "8088:8088"
    volumes:
      - "./docker/conf-testenv:/app/conf"
      - "./docker/certs:/app/certs:ro"
    depends_on:
      - hub-spid-login-ms
    networks:
      - pe-net

  redis:
    container_name: redis
    image: wodby/redis:3.2-2.1.5
    ports:
      - "6379:6379"
    environment:
      REDIS_TIMEOUT: 300
      REDIS_TCP_KEEPALIVE: 60
      REDIS_MAXMEMORY: 182m
    networks:
      - pe-net

  hub-spid-login-ms:
    container_name: hub-spid-login-ms
    build:
      context: ./docker/hub-spid-login-ms
      dockerfile: Dockerfile
    environment:
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    env_file:
      - docker/hub-spid-login-ms/hub-spid-login-ms.env
    depends_on:
      - redis
      # - traefik
    ports:
      - "8080:8080"
      - "5859:5859"
    command: [ "yarn", "start" ]
    volumes:
      - "./docker/certs:/usr/src/app/certs:ro"
    networks:
      - pe-net

  ade-aa-ms-mock:
    container_name: ade-aa-ms-mock
    image: ade-aa-ms-mock
    build:
      context: ./docker/ade-aa-mock
      dockerfile: ./Dockerfile
    env_file:
      - docker/ade-aa-mock/ade-aa-mock.env
    ports:
      - "3001:3001"
    depends_on:
      - azurite
    networks:
      - pe-net

networks:
  pe-net:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
